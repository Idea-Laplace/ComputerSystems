linux> gcc -Og -o {program_name} foo.c bar.c

The ooption -Og insturct thes the compiler to apply a level of optimization that
yields machine code that follows the overall structure of the original C code.

Level of optimization
-Og < -O1 < -O2 < -O3


linux> gcc -S foo.c

To see the assembly code generated by the C compiler, we can use the -S option.



linux> gcc -c foo.c
If we use the -c command-line option, GCC will both compile and assemble the code.


linux> objdump -d foo.o
To inspect the contents of machine-code lines, a class of programs known as disassemblers
can be invaluable.

With linux systems, the program objdump can serve this  role given the -d command line flag.
The 'd' stands for the word 'disassemble'.


.globl function>_name
function_name:
When linking assembly code and C code, add globl tag for functions that will be used
externally later.

gcc -o [execution_file] [source1.c] [source2.s]
