Consider the following code, in which we have omitted the expression 
being computed:

short scale3(short x, short y, short z) {
	short t = x * y + 10 * y + z;
	return t;
}

Compiling the actual function with GCC yields the following assembly code:

// short scale3, x in %rdi, y in %rsi, z in %rdx
scale3:
	leaq (%rsi, %rsi, 9),  %rbx			
	leaq (%rbx, %rdx), %rbx			
	leaq (%rbx, %rdi, %rsi), %rbx
	ret

Fill in the missing expression in the C code.

leaq (%rsi, %rsi, 9),  %rbx			: 10y to %rbx
leaq (%rbx, %rdx), %rbx				: 10y + z to %rbx
leaq (%rbx, %rdi, %rsi), %rbx		: (10y +z) + x * y to %rbx 
ret

the first argument acts like a base value, I think that could be an idiom.

