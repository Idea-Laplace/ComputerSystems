Suppose you are given the job of checking that a C compiler generates
the proper code for structure and union access. You write the following
structure declaration:

typedef union {
	struct {
		long u;
		short v;
		char w;
	} t1;
	struct {
		int a[2];
		char *p;
	} t2;
} u_type;

You write a series of functions of the form 

void get(u_type *up, TYPE *dest) {
	*dest = expr;
}

with different access expressions expr and with destination data type TYPE
set according to type associated with expr. You then examine the code gene-
rated when compiling the functions to see if they match your expectations.

Suppose in these functions that 'up' and 'dest' are loaded into register %rdi
and %rsi, respectively. Fill int the following table with data types TYPE and
sequences of one to three instructions to compute the expression and store the
result at dest.


expr				TYPE		Code
-----------------------------------------------------------------------------------------
up->t1.u			long		movq (%rdi), %rax;	movq %rax, (%rsi)
up->t1.v			short		movw 8(%rdi), %ax;	movw %ax, (%rsi)
&up->t1.w			char *		addq $10, %rdi;	movq %rdi, (%rsi)
up->t2.a			int *		movq %rdi, (%rsi)
up->t2.a[up->t1.u]	int			movq (%rdi), %rax
								movl (%rdi, %rax, 4), %eax
								movl %eax, (%rsi)
*up->t2.p			char		movq 8(%rdi), %rax
								movb (%rax), %al
								movb %al, (%rsi)
